name: Create Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.

jobs:
  create-release:
    name: Create Release with APK
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0  # Fetch full history for changelog generation
        
    - name: Set up JDK 17
      uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@9fc6c4e9069bf8d3d10b2204b1fb8f6ef7065407 # v3.2.2
      
    - name: Cache Gradle packages
      uses: actions/cache@2f8e54208210a422b2efd51efaa6bd6d7ca8920f # v3.4.3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Setup Gradle
      uses: gradle/gradle-build-action@a8f75513eafdebd8141bd1cd4e30fcd194af8dfa # v2.12.0
      with:
        gradle-version: 8.14.2
        
    - name: Accept Android SDK licenses
      run: yes | sdkmanager --licenses || true
      
    - name: Extract version from tag
      id: version
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "VERSION_NAME=${VERSION#v}" >> $GITHUB_OUTPUT
        
    - name: Build release APK
      run: gradle assembleRelease --stacktrace
      
    - name: Build debug APK (for testing)
      run: gradle assembleDebug --stacktrace
      
    - name: Run tests
      run: gradle test --stacktrace
      
    - name: Run lint checks
      run: gradle lint --stacktrace
      
    - name: Generate build info
      run: |
        echo "BUILD_DATE=$(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_ENV
        echo "COMMIT_SHA=${GITHUB_SHA:0:8}" >> $GITHUB_ENV
        
    - name: Rename APK files
      run: |
        cp app/build/outputs/apk/release/app-release-unsigned.apk \
           dead-archive-${{ steps.version.outputs.VERSION_NAME }}-release.apk
        cp app/build/outputs/apk/debug/app-debug.apk \
           dead-archive-${{ steps.version.outputs.VERSION_NAME }}-debug.apk
           
    - name: Generate APK checksums
      run: |
        sha256sum dead-archive-*.apk > checksums.txt
        
    - name: Generate changelog
      id: changelog
      run: |
        # Get commits since last tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
        if [ -z "$PREVIOUS_TAG" ]; then
          # First release - get all commits
          CHANGELOG=$(git log --pretty=format:"- %s (%an)" --reverse)
        else
          # Get commits since previous tag
          CHANGELOG=$(git log ${PREVIOUS_TAG}..HEAD --pretty=format:"- %s (%an)" --reverse)
        fi
        
        # Write changelog to file
        cat > release_notes.md << 'EOF'
        ## Dead Archive ${{ steps.version.outputs.VERSION }}
        
        ### 📱 Download
        - **Release APK**: `dead-archive-${{ steps.version.outputs.VERSION_NAME }}-release.apk` (Production)
        - **Debug APK**: `dead-archive-${{ steps.version.outputs.VERSION_NAME }}-debug.apk` (Testing)
        
        ### 🔧 Installation
        1. Download the release APK
        2. Enable "Install from unknown sources" on your Android device
        3. Install the APK file
        
        ### 📋 Changes in this Release
        $CHANGELOG
        
        ### 🏗️ Build Information
        - **Build Date**: ${{ env.BUILD_DATE }}
        - **Commit**: ${{ env.COMMIT_SHA }}
        - **Gradle Version**: $(./gradlew --version | grep "Gradle" | head -1)
        
        ### 🔒 Verification
        Verify APK integrity using SHA256 checksums provided in `checksums.txt`.
        
        ---
        
        🎵 **Dead Archive** - Grateful Dead Concert Archive for Android
        EOF
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v1
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        name: Dead Archive ${{ steps.version.outputs.VERSION }}
        body_path: release_notes.md
        draft: false
        prerelease: false
        files: |
          dead-archive-*.apk
          checksums.txt
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Comment on success
      run: |
        echo "✅ Release ${{ steps.version.outputs.VERSION }} created successfully!"
        echo "📱 APKs uploaded and ready for download"
        echo "🔗 Release URL: https://github.com/${{ github.repository }}/releases/tag/${{ steps.version.outputs.VERSION }}"